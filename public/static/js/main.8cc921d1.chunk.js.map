{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","style","width","classNames","text-success","text-danger","dist_default","format","Link","to","concat","MissionKey","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Fragment","react_apollo_browser_umd","query","loading","error","data","alert","launches","map","Component","LAUNCH_QUERY","Launch_templateObject","Launch","props","match","params","parseInt","variables","url1","url2","_data$launch","launch_year","details","_data$launch$links","links","article_link","video_link","_data$launch$rocket","rocket","rocket_name","rocket_type","test","includes","split","console","log","height","src","allow","allowFullScreen","title","href","target","rel","client","ApolloClient","uri","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8cc921d1.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\n\nexport default function LaunchItem({\n  launch: { flight_number, mission_name, launch_date_local, launch_success },\n}) {\n  return (\n    <div className=\"card card-body mb-3 mx-auto\" style={{ width: \"60%\" }}>\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>\n            Mission:{\" \"}\n            <span\n              className={classNames({\n                \"text-success\": launch_success,\n                \"text-danger\": !launch_success,\n              })}\n            >\n              {mission_name}\n            </span>\n          </h4>\n          <p>\n            Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Details</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function MissionKey() {\n  return (\n    <div className='my-3'>\n      <p>\n        <span className='px-3 mr-2 bg-success' /> = Success\n      </p>\n      <p>\n        <span className='px-3 mr-2 bg-danger' /> = Failure\n      </p>\n    </div>\n  )\n}\n","import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport LaunchItem from \"./LaunchItem\";\nimport MissionKey from \"./MissionKey\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n      details\n    }\n  }\n`;\n\nexport class Launches extends Component {\n  render() {\n    return (\n      <>\n        <h1 className=\"display-4 my-3\">Launches</h1>\n        <MissionKey />\n        <Query query={LAUNCHES_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) alert(error);\n\n            return (\n              <>\n                {data.launches.map((launch) => (\n                  <LaunchItem key={launch.flight_number} launch={launch} />\n                ))}\n              </>\n            );\n          }}\n        </Query>\n      </>\n    );\n  }\n}\n\nexport default Launches;\n","import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\n// import classNames from \"classnames\";\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      details\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n      links {\n        article_link\n        video_link\n      }\n    }\n  }\n`;\n\nexport default class Launch extends Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n    return (\n      <>\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) alert(error);\n\n            const {\n              mission_name,\n              flight_number,\n              launch_year,\n              launch_success,\n              details,\n              links: { article_link, video_link },\n              rocket: { rocket_name, rocket_type },\n            } = data.launch;\n\n            let url1;\n            let url2;\n            const test = \"https://youtu.be/\";\n            if (video_link.includes(test)) {\n              url1 = video_link.split(test);\n              url2 = url1;\n            } else {\n              url2 = video_link.split(\"/watch?v=\");\n            }\n            console.log(url1, url2)\n\n            return (\n              <>\n                <h1 className=\"display-4 my-3\">\n                  <span className=\"text-white\">Mission: </span> {mission_name}\n                </h1>\n                <h4 className=\"mb-3\">Short Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Flight Number: {flight_number}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Year: {launch_year}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Successful:{\" \"}\n                    {launch_success ? (\n                      <span className=\"text-success\">YES</span>\n                    ) : (\n                      <span className=\"text-danger\">NO!</span>\n                    )}\n                  </li>\n                </ul>\n\n                <h4 className=\"my-3\">Rocket Details</h4>\n                <ul className=\"list-group mb-4\">\n                  <li className=\"list-group-item\">\n                    Rocket Name: {rocket_name}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Rocket Type: {rocket_type}\n                  </li>\n                </ul>\n\n                <h4 className=\"my-3\">Details</h4>\n                <ul className=\"list-group mb-4\">\n                  <li className=\"list-group-item\">{details}</li>\n                  <li className=\"list-group-item\">\n                    <h4 className=\"my-3\">Video</h4>\n                    <iframe\n                      height=\"300rem\"\n                      width=\"70%\"\n                      src={`https://www.youtube.com/embed/${url2[1]}`}\n                      allow=\"encrypted-media\"\n                      allowFullScreen\n                      title=\"video\"\n                      className=\"mb-4\"\n                    />\n                  </li>\n                </ul>\n\n                <h4 className=\"my-3\">Article</h4>\n                <a\n                  className=\"btn btn-primary mb-4\"\n                  href={article_link}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Article\n                </a>\n                <Link to=\"/\" className=\"btn btn-secondary\">\n                  Back\n                </Link>\n              </>\n            );\n          }}\n        </Query>\n      </>\n    );\n  }\n}\n","import \"../node_modules/bootswatch/dist/vapor/bootstrap.min.css\";\nimport \"./App.css\";\nimport React from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n});\n\nexport default function App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App\">\n          <h1>SpaceX</h1>\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}